(function() {
  var Flapp, SourceCollector, pick,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  pick = require('file-picker').pick;

  SourceCollector = require('./flutils').SourceCollector;

  Flapp = (function() {
    function Flapp(build) {
      this.createBuildCommand = __bind(this.createBuildCommand, this);
      this.addArg = __bind(this.addArg, this);
      this.addSourceDirectory = __bind(this.addSourceDirectory, this);
      this.addExternalLibraryDirectory = __bind(this.addExternalLibraryDirectory, this);
      this.addLibraryDirectory = __bind(this.addLibraryDirectory, this);
      this.collector = new SourceCollector(build);
      this.build = build;
    }

    Flapp.prototype.addLibraryDirectory = function(path) {
      return this.collector.addLibraryDirectory(path);
    };

    Flapp.prototype.addExternalLibraryDirectory = function(path) {
      return this.collector.addExternalLibraryDirectory(path);
    };

    Flapp.prototype.addSourceDirectory = function(path) {
      return this.collector.addSourceDirectory(path);
    };

    Flapp.prototype.addArg = function(arg) {
      return this.collector.addArg(arg);
    };

    Flapp.prototype.createBuildCommand = function(source, output, complete) {
      var bin;
      bin = 'mxmlc';
      return this.build.getSDKVersion((function(_this) {
        return function(version) {
          var arg, args, directory, library, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;
          if (process.platform.indexOf('win') === 0) {
            if (version > '4.6.0') {
              bin = 'mxmlc.bat';
            } else {
              bin = 'mxmlc.exe';
            }
          }
          args = [];
          args.push(_this.build.wrap(_this.build.getEnv('FLEX_HOME') + '/bin/' + bin));
          args.push(_this.build.wrap(_this.build.resolvePath(source)));
          _ref = _this.collector.getLibraries();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            library = _ref[_i];
            args.push('-library-path ' + _this.build.wrap(library));
          }
          _ref1 = _this.collector.getExternalLibraries();
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            library = _ref1[_j];
            args.push('-external-library-path ' + _this.build.wrap(library));
          }
          _ref2 = _this.collector.getSourceDirectories();
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            directory = _ref2[_k];
            args.push('-source-path ' + _this.build.wrap(directory));
          }
          _ref3 = _this.collector.getArgs();
          for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
            arg = _ref3[_l];
            args.push(_this.build.applyEnv(arg));
          }
          output = _this.build.wrap(_this.build.resolvePath(output));
          args.push('-link-report ' + output.replace('.swf', '.xml'));
          args.push('-output ' + output);
          if (complete != null) {
            return complete(args.join(' '));
          }
        };
      })(this));
    };

    return Flapp;

  })();

  module.exports = Flapp;

}).call(this);

//# sourceMappingURL=data:application/json;base64,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Q0FBQTtBQUNDLFlBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxlQUFBLEdBQWtCLEtBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLFNBQVosQ0FBNUIsQ0FBQSxDQUREO0FBQUEsV0FyQkE7QUEyQkE7QUFBQSxlQUFBLDhDQUFBOzRCQUFBO0FBQ0MsWUFBQSxJQUFJLENBQUMsSUFBTCxDQUFVLEtBQUMsQ0FBQSxLQUFLLENBQUMsUUFBUCxDQUFnQixHQUFoQixDQUFWLENBQUEsQ0FERDtBQUFBLFdBM0JBO0FBQUEsVUE4QkEsTUFBQSxHQUFTLEtBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLEtBQUMsQ0FBQSxLQUFLLENBQUMsV0FBUCxDQUFtQixNQUFuQixDQUFaLENBOUJULENBQUE7QUFBQSxVQWlDQSxJQUFJLENBQUMsSUFBTCxDQUFVLGVBQUEsR0FBa0IsTUFBTSxDQUFDLE9BQVAsQ0FBZSxNQUFmLEVBQXVCLE1BQXZCLENBQTVCLENBakNBLENBQUE7QUFBQSxVQW9DQSxJQUFJLENBQUMsSUFBTCxDQUFVLFVBQUEsR0FBYSxNQUF2QixDQXBDQSxDQUFBO0FBc0NBLFVBQUEsSUFBRyxnQkFBSDttQkFDQyxRQUFBLENBQVMsSUFBSSxDQUFDLElBQUwsQ0FBVSxHQUFWLENBQVQsRUFERDtXQXZDb0I7UUFBQSxFQUFBO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFyQixFQU5tQjtJQUFBLENBdEJwQixDQUFBOztpQkFBQTs7TUFKRCxDQUFBOztBQUFBLEVBMEVBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLEtBMUVqQixDQUFBO0FBQUEiLCJmaWxlIjoiZmxhcHAuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJwaWNrID0gcmVxdWlyZSgnZmlsZS1waWNrZXInKS5waWNrXG57U291cmNlQ29sbGVjdG9yfSA9IHJlcXVpcmUoJy4vZmx1dGlscycpXG5cbmNsYXNzIEZsYXBwXG5cdGNvbnN0cnVjdG9yOiAoYnVpbGQpIC0+XG5cdFx0QGNvbGxlY3RvciA9IG5ldyBTb3VyY2VDb2xsZWN0b3IoYnVpbGQpXG5cdFx0QGJ1aWxkID0gYnVpbGRcblxuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCMgaW1wbGVtZW50c1xuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdGFkZExpYnJhcnlEaXJlY3Rvcnk6IChwYXRoKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkTGlicmFyeURpcmVjdG9yeShwYXRoKVxuXG5cdGFkZEV4dGVybmFsTGlicmFyeURpcmVjdG9yeTogKHBhdGgpID0+XG5cdFx0QGNvbGxlY3Rvci5hZGRFeHRlcm5hbExpYnJhcnlEaXJlY3RvcnkocGF0aClcblxuXHRhZGRTb3VyY2VEaXJlY3Rvcnk6IChwYXRoKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkU291cmNlRGlyZWN0b3J5KHBhdGgpXG5cblx0YWRkQXJnOiAoYXJnKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkQXJnKGFyZylcblxuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCMgcHJvY2Vzc1xuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdGNyZWF0ZUJ1aWxkQ29tbWFuZDogKHNvdXJjZSwgb3V0cHV0LCBjb21wbGV0ZSkgPT5cblx0XHQjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0IyAwIGdldCBleGVjIGZpbGVcblx0XHQjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0YmluID0gJ214bWxjJ1xuXG5cdFx0QGJ1aWxkLmdldFNES1ZlcnNpb24gKHZlcnNpb24pID0+XG5cdFx0XHRpZiBwcm9jZXNzLnBsYXRmb3JtLmluZGV4T2YoJ3dpbicpIGlzIDBcblx0XHRcdFx0aWYgdmVyc2lvbiA+ICc0LjYuMCdcblx0XHRcdFx0XHRiaW4gPSAnbXhtbGMuYmF0J1xuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0YmluID0gJ214bWxjLmV4ZSdcblxuXHRcdFx0IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdCMgMSA6IGNyZWF0ZSBwYXRoIGFyZ3Ncblx0XHRcdCMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHRhcmdzID0gW11cblxuXHRcdFx0YXJncy5wdXNoKEBidWlsZC53cmFwKEBidWlsZC5nZXRFbnYoJ0ZMRVhfSE9NRScpICsgJy9iaW4vJyArIGJpbikpXG5cblx0XHRcdGFyZ3MucHVzaChAYnVpbGQud3JhcChAYnVpbGQucmVzb2x2ZVBhdGgoc291cmNlKSkpXG5cblx0XHRcdGZvciBsaWJyYXJ5IGluIEBjb2xsZWN0b3IuZ2V0TGlicmFyaWVzKClcblx0XHRcdFx0YXJncy5wdXNoKCctbGlicmFyeS1wYXRoICcgKyBAYnVpbGQud3JhcChsaWJyYXJ5KSlcblxuXHRcdFx0Zm9yIGxpYnJhcnkgaW4gQGNvbGxlY3Rvci5nZXRFeHRlcm5hbExpYnJhcmllcygpXG5cdFx0XHRcdGFyZ3MucHVzaCgnLWV4dGVybmFsLWxpYnJhcnktcGF0aCAnICsgQGJ1aWxkLndyYXAobGlicmFyeSkpXG5cblx0XHRcdGZvciBkaXJlY3RvcnkgaW4gQGNvbGxlY3Rvci5nZXRTb3VyY2VEaXJlY3RvcmllcygpXG5cdFx0XHRcdGFyZ3MucHVzaCgnLXNvdXJjZS1wYXRoICcgKyBAYnVpbGQud3JhcChkaXJlY3RvcnkpKVxuXG5cdFx0XHQjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdFx0IyAyIDogYXJncywgb3V0cHV0XG5cdFx0XHQjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdFx0Zm9yIGFyZyBpbiBAY29sbGVjdG9yLmdldEFyZ3MoKVxuXHRcdFx0XHRhcmdzLnB1c2goQGJ1aWxkLmFwcGx5RW52KGFyZykpXG5cblx0XHRcdG91dHB1dCA9IEBidWlsZC53cmFwKEBidWlsZC5yZXNvbHZlUGF0aChvdXRwdXQpKVxuXG5cdFx0XHQjIGxpbmstcmVwb3J0XG5cdFx0XHRhcmdzLnB1c2goJy1saW5rLXJlcG9ydCAnICsgb3V0cHV0LnJlcGxhY2UoJy5zd2YnLCAnLnhtbCcpKVxuXG5cdFx0XHQjIHN3ZlxuXHRcdFx0YXJncy5wdXNoKCctb3V0cHV0ICcgKyBvdXRwdXQpXG5cblx0XHRcdGlmIGNvbXBsZXRlP1xuXHRcdFx0XHRjb21wbGV0ZShhcmdzLmpvaW4oJyAnKSlcblxubW9kdWxlLmV4cG9ydHMgPSBGbGFwcCJdfQ==