(function() {
  var Fllib, SourceCollector, pick,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  pick = require('file-picker').pick;

  SourceCollector = require('./flutils').SourceCollector;

  Fllib = (function() {
    function Fllib(build) {
      this.createBuildCommand = __bind(this.createBuildCommand, this);
      this.addArg = __bind(this.addArg, this);
      this.addSourceDirectory = __bind(this.addSourceDirectory, this);
      this.addExternalLibraryDirectory = __bind(this.addExternalLibraryDirectory, this);
      this.addLibraryDirectory = __bind(this.addLibraryDirectory, this);
      this.setFilterFunction = __bind(this.setFilterFunction, this);
      this.collector = new SourceCollector(build);
      this.build = build;
    }

    Fllib.prototype.setFilterFunction = function(func) {
      return this.filterFunction = func;
    };

    Fllib.prototype.addLibraryDirectory = function(path) {
      return this.collector.addLibraryDirectory(path);
    };

    Fllib.prototype.addExternalLibraryDirectory = function(path) {
      return this.collector.addExternalLibraryDirectory(path);
    };

    Fllib.prototype.addSourceDirectory = function(path) {
      return this.collector.addSourceDirectory(path);
    };

    Fllib.prototype.addArg = function(arg) {
      return this.collector.addArg(arg);
    };

    Fllib.prototype.createBuildCommand = function(output, complete) {
      var bin;
      bin = 'compc';
      return this.build.getSDKVersion((function(_this) {
        return function(version) {
          var args, directory, library, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
          if (process.platform.indexOf('win') === 0) {
            if (version > '4.6.0') {
              bin = 'compc.bat';
            } else {
              bin = 'compc.exe';
            }
          }
          args = [];
          args.push(_this.build.wrap(_this.build.getEnv('FLEX_HOME') + '/bin/' + bin));
          _ref = _this.collector.getLibraries();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            library = _ref[_i];
            args.push('-library-path ' + _this.build.wrap(library));
          }
          _ref1 = _this.collector.getExternalLibraries();
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            library = _ref1[_j];
            args.push('-external-library-path ' + _this.build.wrap(library));
          }
          _ref2 = _this.collector.getSourceDirectories();
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            directory = _ref2[_k];
            args.push('-source-path ' + _this.build.wrap(directory));
          }
          return _this.collector.getIncludeClasses(_this.filterFunction, function(classPaths) {
            var arg, _l, _len3, _ref3;
            args.push('-include-classes ' + classPaths.join(' '));
            _ref3 = _this.collector.getArgs();
            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
              arg = _ref3[_l];
              args.push(_this.build.applyEnv(arg));
            }
            args.push('-output ' + _this.build.wrap(_this.build.resolvePath(output)));
            if (complete != null) {
              return complete(args.join(' '));
            }
          });
        };
      })(this));
    };

    return Fllib;

  })();

  module.exports = Fllib;

}).call(this);

//# sourceMappingURL=data:application/json;base64,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LElBQUwsQ0FBVSxlQUFBLEdBQWtCLEtBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLFNBQVosQ0FBNUIsQ0FBQSxDQUREO0FBQUEsV0FuQkE7aUJBMkNBLEtBQUMsQ0FBQSxTQUFTLENBQUMsaUJBQVgsQ0FBNkIsS0FBQyxDQUFBLGNBQTlCLEVBQThDLFNBQUMsVUFBRCxHQUFBO0FBQzdDLGdCQUFBLHFCQUFBO0FBQUEsWUFBQSxJQUFJLENBQUMsSUFBTCxDQUFVLG1CQUFBLEdBQXNCLFVBQVUsQ0FBQyxJQUFYLENBQWdCLEdBQWhCLENBQWhDLENBQUEsQ0FBQTtBQUtBO0FBQUEsaUJBQUEsOENBQUE7OEJBQUE7QUFDQyxjQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsS0FBQyxDQUFBLEtBQUssQ0FBQyxRQUFQLENBQWdCLEdBQWhCLENBQVYsQ0FBQSxDQUREO0FBQUEsYUFMQTtBQUFBLFlBUUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxVQUFBLEdBQWEsS0FBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQVksS0FBQyxDQUFBLEtBQUssQ0FBQyxXQUFQLENBQW1CLE1BQW5CLENBQVosQ0FBdkIsQ0FSQSxDQUFBO0FBVUEsWUFBQSxJQUFHLGdCQUFIO3FCQUNDLFFBQUEsQ0FBUyxJQUFJLENBQUMsSUFBTCxDQUFVLEdBQVYsQ0FBVCxFQUREO2FBWDZDO1VBQUEsQ0FBOUMsRUE1Q29CO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBckIsRUFObUI7SUFBQSxDQTFCcEIsQ0FBQTs7aUJBQUE7O01BSkQsQ0FBQTs7QUFBQSxFQThGQSxNQUFNLENBQUMsT0FBUCxHQUFpQixLQTlGakIsQ0FBQTtBQUFBIiwiZmlsZSI6ImZsbGliLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsicGljayA9IHJlcXVpcmUoJ2ZpbGUtcGlja2VyJykucGlja1xue1NvdXJjZUNvbGxlY3Rvcn0gPSByZXF1aXJlKCcuL2ZsdXRpbHMnKVxuXG5jbGFzcyBGbGxpYlxuXHRjb25zdHJ1Y3RvcjogKGJ1aWxkKSAtPlxuXHRcdEBjb2xsZWN0b3IgPSBuZXcgU291cmNlQ29sbGVjdG9yKGJ1aWxkKVxuXHRcdEBidWlsZCA9IGJ1aWxkXG5cblx0Iz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQjIHNldHRpbmdcblx0Iz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQjIEBwYXJhbSBmdW5jIGBib29sZWFuIGZ1bmN0aW9uKGZpbGUpYFxuXHRzZXRGaWx0ZXJGdW5jdGlvbjogKGZ1bmMpID0+XG5cdFx0QGZpbHRlckZ1bmN0aW9uID0gZnVuY1xuXG5cdGFkZExpYnJhcnlEaXJlY3Rvcnk6IChwYXRoKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkTGlicmFyeURpcmVjdG9yeShwYXRoKVxuXG5cdGFkZEV4dGVybmFsTGlicmFyeURpcmVjdG9yeTogKHBhdGgpID0+XG5cdFx0QGNvbGxlY3Rvci5hZGRFeHRlcm5hbExpYnJhcnlEaXJlY3RvcnkocGF0aClcblxuXHRhZGRTb3VyY2VEaXJlY3Rvcnk6IChwYXRoKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkU291cmNlRGlyZWN0b3J5KHBhdGgpXG5cblx0YWRkQXJnOiAoYXJnKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkQXJnKGFyZylcblxuXHQjPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCMgcHJvY2Vzc1xuXHQjPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdGNyZWF0ZUJ1aWxkQ29tbWFuZDogKG91dHB1dCwgY29tcGxldGUpID0+XG5cdFx0Iy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHQjIDAgZ2V0IGV4ZWMgZmlsZVxuXHRcdCMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0YmluID0gJ2NvbXBjJ1xuXG5cdFx0QGJ1aWxkLmdldFNES1ZlcnNpb24gKHZlcnNpb24pID0+XG5cdFx0XHRpZiBwcm9jZXNzLnBsYXRmb3JtLmluZGV4T2YoJ3dpbicpIGlzIDBcblx0XHRcdFx0aWYgdmVyc2lvbiA+ICc0LjYuMCdcblx0XHRcdFx0XHRiaW4gPSAnY29tcGMuYmF0J1xuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0YmluID0gJ2NvbXBjLmV4ZSdcblxuXHRcdFx0Iy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdCMgMSBjcmVhdGUgcGF0aCBhcmdzXG5cdFx0XHQjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdFx0YXJncyA9IFtdXG5cblx0XHRcdGFyZ3MucHVzaChAYnVpbGQud3JhcChAYnVpbGQuZ2V0RW52KCdGTEVYX0hPTUUnKSArICcvYmluLycgKyBiaW4pKVxuXG5cdFx0XHRmb3IgbGlicmFyeSBpbiBAY29sbGVjdG9yLmdldExpYnJhcmllcygpXG5cdFx0XHRcdGFyZ3MucHVzaCgnLWxpYnJhcnktcGF0aCAnICsgQGJ1aWxkLndyYXAobGlicmFyeSkpXG5cblx0XHRcdGZvciBsaWJyYXJ5IGluIEBjb2xsZWN0b3IuZ2V0RXh0ZXJuYWxMaWJyYXJpZXMoKVxuXHRcdFx0XHRhcmdzLnB1c2goJy1leHRlcm5hbC1saWJyYXJ5LXBhdGggJyArIEBidWlsZC53cmFwKGxpYnJhcnkpKVxuXG5cdFx0XHRmb3IgZGlyZWN0b3J5IGluIEBjb2xsZWN0b3IuZ2V0U291cmNlRGlyZWN0b3JpZXMoKVxuXHRcdFx0XHRhcmdzLnB1c2goJy1zb3VyY2UtcGF0aCAnICsgQGJ1aWxkLndyYXAoZGlyZWN0b3J5KSlcblxuXHRcdFx0Iy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdCMgMiBjcmVhdGUgaW5jbHVkZSBjbGFzc2VzIGFyZ3Ncblx0XHRcdCNcblx0XHRcdCMgbWFuaWZlc3QueG1sIHNwZWNcblx0XHRcdCMgLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHQjXG5cdFx0XHQjIC1uYW1lc3BhY2UgaHR0cDovL3NzZW4ubmFtZS9ucy9zc2VuIG1hbmlmZXN0LnhtbFxuXHRcdFx0IyAtaW5jbHVkZS1uYW1lc3BhY2UgaHR0cDovL3NzZW4ubmFtZS9ucy9zc2VuXG5cdFx0XHQjXG5cdFx0XHQjIDxjb21wb25lbnRQYWNrYWdlPlxuXHRcdFx0IyBcdDxjb21wb25lbnQgaWQ9XCJTdHJpcGVcIiBjbGFzcz1cInNzZW4uY29tcG9uZW50cy5maWxscy5TdHJpcGVcIi8+XG5cdFx0XHQjIDwvY29tcG9uZW50UGFja2FnZT5cblx0XHRcdCNcblx0XHRcdCNcblx0XHRcdCMgbWFuaWZlc3Qgb2JqZWN0XG5cdFx0XHQjIC0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdCNcblx0XHRcdCMgLSBuYW1lc3BhY2VbJ2h0dHA6Ly9zc2VuLm5hbWUvbnMvc3NlbiddWzBdID0gJ3NzZW4uY29tcG9uZW50cy5maWxscy5TdHJpcGUnXG5cdFx0XHQjXG5cdFx0XHQjXG5cdFx0XHQjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdFx0QGNvbGxlY3Rvci5nZXRJbmNsdWRlQ2xhc3NlcyBAZmlsdGVyRnVuY3Rpb24sIChjbGFzc1BhdGhzKSA9PlxuXHRcdFx0XHRhcmdzLnB1c2goJy1pbmNsdWRlLWNsYXNzZXMgJyArIGNsYXNzUGF0aHMuam9pbignICcpKVxuXG5cdFx0XHRcdCMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHRcdCMgMyBhcmdzLCBvdXRwdXRcblx0XHRcdFx0Iy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdFx0Zm9yIGFyZyBpbiBAY29sbGVjdG9yLmdldEFyZ3MoKVxuXHRcdFx0XHRcdGFyZ3MucHVzaChAYnVpbGQuYXBwbHlFbnYoYXJnKSlcblxuXHRcdFx0XHRhcmdzLnB1c2goJy1vdXRwdXQgJyArIEBidWlsZC53cmFwKEBidWlsZC5yZXNvbHZlUGF0aChvdXRwdXQpKSlcblxuXHRcdFx0XHRpZiBjb21wbGV0ZT9cblx0XHRcdFx0XHRjb21wbGV0ZShhcmdzLmpvaW4oJyAnKSlcblxubW9kdWxlLmV4cG9ydHMgPSBGbGxpYiJdfQ==