(function() {
  var Fllib, SourceCollector, pick,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  pick = require('file-picker').pick;

  SourceCollector = require('./flutils').SourceCollector;

  Fllib = (function() {
    function Fllib(build) {
      this.createBuildCommand = __bind(this.createBuildCommand, this);
      this.addArg = __bind(this.addArg, this);
      this.addSourceDirectory = __bind(this.addSourceDirectory, this);
      this.addExternalLibraryDirectory = __bind(this.addExternalLibraryDirectory, this);
      this.addLibraryDirectory = __bind(this.addLibraryDirectory, this);
      this.setFilterFunction = __bind(this.setFilterFunction, this);
      this.collector = new SourceCollector(build);
      this.build = build;
    }

    Fllib.prototype.setFilterFunction = function(func) {
      return this.filterFunction = func;
    };

    Fllib.prototype.addLibraryDirectory = function(path) {
      return this.collector.addLibraryDirectory(path);
    };

    Fllib.prototype.addExternalLibraryDirectory = function(path) {
      return this.collector.addExternalLibraryDirectory(path);
    };

    Fllib.prototype.addSourceDirectory = function(path) {
      return this.collector.addSourceDirectory(path);
    };

    Fllib.prototype.addArg = function(arg) {
      return this.collector.addArg(arg);
    };

    Fllib.prototype.createBuildCommand = function(output, complete) {
      var bin;
      bin = 'compc';
      return this.build.getSDKVersion((function(_this) {
        return function(version) {
          var args, directory, library, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
          if (process.platform.indexOf('win') === 0) {
            if (version > '4.6.0') {
              bin = 'compc.bat';
            } else {
              bin = 'compc.exe';
            }
          }
          args = [];
          args.push(_this.build.wrap(_this.build.getEnv('FLEX_HOME') + '/bin/' + bin));
          _ref = _this.collector.getLibraries();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            library = _ref[_i];
            args.push('-library-path ' + _this.build.wrap(library));
          }
          _ref1 = _this.collector.getExternalLibraries();
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            library = _ref1[_j];
            args.push('-external-library-path ' + _this.build.wrap(library));
          }
          _ref2 = _this.collector.getSourceDirectories();
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            directory = _ref2[_k];
            args.push('-source-path ' + _this.build.wrap(directory));
          }
          return _this.collector.getIncludeClasses(_this.filterFunction, function(classPaths) {
            var arg, _l, _len3, _ref3;
            args.push('-include-classes ' + classPaths.join(' '));
            _ref3 = _this.collector.getArgs();
            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
              arg = _ref3[_l];
              args.push(_this.build.applyEnv(arg));
            }
            args.push('-output ' + _this.build.wrap(_this.build.resolvePath(output)));
            if (complete != null) {
              return complete(args.join(' '));
            }
          });
        };
      })(this));
    };

    return Fllib;

  })();

  module.exports = Fllib;

}).call(this);

//# sourceMappingURL=data:application/json;base64,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QUMsSUFBTCxDQUFVLGVBQUEsR0FBa0IsS0FBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQVksU0FBWixDQUE1QixDQUFBLENBREQ7QUFBQSxXQW5CQTtpQkF5QkEsS0FBQyxDQUFBLFNBQVMsQ0FBQyxpQkFBWCxDQUE2QixLQUFDLENBQUEsY0FBOUIsRUFBOEMsU0FBQyxVQUFELEdBQUE7QUFDN0MsZ0JBQUEscUJBQUE7QUFBQSxZQUFBLElBQUksQ0FBQyxJQUFMLENBQVUsbUJBQUEsR0FBc0IsVUFBVSxDQUFDLElBQVgsQ0FBZ0IsR0FBaEIsQ0FBaEMsQ0FBQSxDQUFBO0FBS0E7QUFBQSxpQkFBQSw4Q0FBQTs4QkFBQTtBQUNDLGNBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFDLENBQUEsS0FBSyxDQUFDLFFBQVAsQ0FBZ0IsR0FBaEIsQ0FBVixDQUFBLENBREQ7QUFBQSxhQUxBO0FBQUEsWUFRQSxJQUFJLENBQUMsSUFBTCxDQUFVLFVBQUEsR0FBYSxLQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxLQUFDLENBQUEsS0FBSyxDQUFDLFdBQVAsQ0FBbUIsTUFBbkIsQ0FBWixDQUF2QixDQVJBLENBQUE7QUFVQSxZQUFBLElBQUcsZ0JBQUg7cUJBQ0MsUUFBQSxDQUFTLElBQUksQ0FBQyxJQUFMLENBQVUsR0FBVixDQUFULEVBREQ7YUFYNkM7VUFBQSxDQUE5QyxFQTFCb0I7UUFBQSxFQUFBO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFyQixFQU5tQjtJQUFBLENBNUJwQixDQUFBOztpQkFBQTs7TUFKRCxDQUFBOztBQUFBLEVBOEVBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLEtBOUVqQixDQUFBO0FBQUEiLCJmaWxlIjoiZmxsaWIuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJwaWNrID0gcmVxdWlyZSgnZmlsZS1waWNrZXInKS5waWNrXG57U291cmNlQ29sbGVjdG9yfSA9IHJlcXVpcmUoJy4vZmx1dGlscycpXG5cbmNsYXNzIEZsbGliXG5cdGNvbnN0cnVjdG9yOiAoYnVpbGQpIC0+XG5cdFx0QGNvbGxlY3RvciA9IG5ldyBTb3VyY2VDb2xsZWN0b3IoYnVpbGQpXG5cdFx0QGJ1aWxkID0gYnVpbGRcblxuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCMgb3B0aW9uc1xuXHQjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCMgQHBhcmFtIGZ1bmMgZnVuY3Rpb24oZmlsZSlcblx0c2V0RmlsdGVyRnVuY3Rpb246IChmdW5jKSA9PiBAZmlsdGVyRnVuY3Rpb24gPSBmdW5jXG5cblx0IyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQjIGltcGxlbWVudHNcblx0IyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHRhZGRMaWJyYXJ5RGlyZWN0b3J5OiAocGF0aCkgPT5cblx0XHRAY29sbGVjdG9yLmFkZExpYnJhcnlEaXJlY3RvcnkocGF0aClcblxuXHRhZGRFeHRlcm5hbExpYnJhcnlEaXJlY3Rvcnk6IChwYXRoKSA9PlxuXHRcdEBjb2xsZWN0b3IuYWRkRXh0ZXJuYWxMaWJyYXJ5RGlyZWN0b3J5KHBhdGgpXG5cblx0YWRkU291cmNlRGlyZWN0b3J5OiAocGF0aCkgPT5cblx0XHRAY29sbGVjdG9yLmFkZFNvdXJjZURpcmVjdG9yeShwYXRoKVxuXG5cdGFkZEFyZzogKGFyZykgPT5cblx0XHRAY29sbGVjdG9yLmFkZEFyZyhhcmcpXG5cblx0IyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQjIHByb2Nlc3Ncblx0IyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHRjcmVhdGVCdWlsZENvbW1hbmQ6IChvdXRwdXQsIGNvbXBsZXRlKSA9PlxuXHRcdCMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHQjIDAgZ2V0IGV4ZWMgZmlsZVxuXHRcdCMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRiaW4gPSAnY29tcGMnXG5cblx0XHRAYnVpbGQuZ2V0U0RLVmVyc2lvbiAodmVyc2lvbikgPT5cblx0XHRcdGlmIHByb2Nlc3MucGxhdGZvcm0uaW5kZXhPZignd2luJykgaXMgMFxuXHRcdFx0XHRpZiB2ZXJzaW9uID4gJzQuNi4wJ1xuXHRcdFx0XHRcdGJpbiA9ICdjb21wYy5iYXQnXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRiaW4gPSAnY29tcGMuZXhlJ1xuXG5cdFx0XHQjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRcdFx0IyAxIDogY3JlYXRlIHBhdGggYXJnc1xuXHRcdFx0IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdGFyZ3MgPSBbXVxuXG5cdFx0XHRhcmdzLnB1c2goQGJ1aWxkLndyYXAoQGJ1aWxkLmdldEVudignRkxFWF9IT01FJykgKyAnL2Jpbi8nICsgYmluKSlcblxuXHRcdFx0Zm9yIGxpYnJhcnkgaW4gQGNvbGxlY3Rvci5nZXRMaWJyYXJpZXMoKVxuXHRcdFx0XHRhcmdzLnB1c2goJy1saWJyYXJ5LXBhdGggJyArIEBidWlsZC53cmFwKGxpYnJhcnkpKVxuXG5cdFx0XHRmb3IgbGlicmFyeSBpbiBAY29sbGVjdG9yLmdldEV4dGVybmFsTGlicmFyaWVzKClcblx0XHRcdFx0YXJncy5wdXNoKCctZXh0ZXJuYWwtbGlicmFyeS1wYXRoICcgKyBAYnVpbGQud3JhcChsaWJyYXJ5KSlcblxuXHRcdFx0Zm9yIGRpcmVjdG9yeSBpbiBAY29sbGVjdG9yLmdldFNvdXJjZURpcmVjdG9yaWVzKClcblx0XHRcdFx0YXJncy5wdXNoKCctc291cmNlLXBhdGggJyArIEBidWlsZC53cmFwKGRpcmVjdG9yeSkpXG5cblx0XHRcdCMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHQjIDIgOiBjcmVhdGUgaW5jbHVkZSBjbGFzc2VzIGFyZ3Ncblx0XHRcdCMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHRAY29sbGVjdG9yLmdldEluY2x1ZGVDbGFzc2VzIEBmaWx0ZXJGdW5jdGlvbiwgKGNsYXNzUGF0aHMpID0+XG5cdFx0XHRcdGFyZ3MucHVzaCgnLWluY2x1ZGUtY2xhc3NlcyAnICsgY2xhc3NQYXRocy5qb2luKCcgJykpXG5cblx0XHRcdFx0IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcdFx0IyAzIDogYXJncywgb3V0cHV0XG5cdFx0XHRcdCMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XHRcdGZvciBhcmcgaW4gQGNvbGxlY3Rvci5nZXRBcmdzKClcblx0XHRcdFx0XHRhcmdzLnB1c2goQGJ1aWxkLmFwcGx5RW52KGFyZykpXG5cblx0XHRcdFx0YXJncy5wdXNoKCctb3V0cHV0ICcgKyBAYnVpbGQud3JhcChAYnVpbGQucmVzb2x2ZVBhdGgob3V0cHV0KSkpXG5cblx0XHRcdFx0aWYgY29tcGxldGU/XG5cdFx0XHRcdFx0Y29tcGxldGUoYXJncy5qb2luKCcgJykpXG5cbm1vZHVsZS5leHBvcnRzID0gRmxsaWIiXX0=